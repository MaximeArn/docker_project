version: "3.9"

services:
  voteapp-redis:
    image: redis:latest
    container_name: voteapp-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  voteapp-postgres:
    image: postgres:15-alpine
    container_name: voteapp-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5

  voteapp-vote:
    build:
      context: ./vote
    container_name: voteapp-vote
    depends_on:
      - voteapp-redis
      - voteapp-postgres
    environment:
      - REDIS_HOST=voteapp-redis
      - POSTGRES_HOST=voteapp-postgres
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - backend

  voteapp-worker:
    build:
      context: ./worker
    container_name: voteapp-worker
    depends_on:
      - voteapp-redis
      - voteapp-postgres
    environment:
      - REDIS_HOST=voteapp-redis
      - POSTGRES_HOST=voteapp-postgres
    restart: unless-stopped
    networks:
      - backend

  voteapp-result:
    build:
      context: ./result
    container_name: voteapp-result
    depends_on:
      - voteapp-postgres
    environment:
      - POSTGRES_HOST=voteapp-postgres
    ports:
      - "8081:8080"
    restart: unless-stopped
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  pgdata:
